---
- name: Create certificate directory
  file:
    name: "{{ tls_certs_dir }}"
    state: directory
    owner: root
    group: wheel
    mode: '0755'

- name: Create keys directory
  file:
    name: "{{ tls_private_dir }}"
    state: directory
    owner: root
    group: wheel
    mode: '0750'

- name: Install Root CA
  copy:
    src: "private/{{ tls_root_ca }}.crt"
    dest: "{{ tls_root_ca_path }}"
    owner: root
    group: wheel
    mode: '0644'
  register: root_ca

- name: Install Intermediate CA
  copy:
    src: "private/{{ tls_intermediate_ca }}.crt"
    dest: "{{ tls_intermediate_ca_path }}"
    owner: root
    group: wheel
    mode: '0644'
  register: intermediate_ca

- name: Install server certificate
  copy:
    src: "private/{{ tls_cert_name }}.crt"
    dest: "{{ tls_cert_path }}"
    owner: root
    group: wheel
    mode: '0644'
  register: server_cert

- name: Install server key
  copy:
    src: "private/{{ tls_cert_name }}.key"
    dest: "{{ tls_key_path }}"
    owner: "{{ tls_key_owner }}"
    group: "{{ tls_key_group }}"
    mode: '0600'
  register: server_key

- block:
    - name: Check certificate chain
      stat:
        path: "{{ tls_chained_cert_path }}"
      register: chain_cert
    - name: Combine certificate chain
      shell: "cat {{ tls_cert_path }} {{ tls_intermediate_ca_path }} > {{ tls_chained_cert_path }}"
      when: not chain_cert.stat.exists or server_cert.changed or intermediate_ca.changed
  when: create_chained_cert

- block:
    - name: Check PEM key
      stat:
        path: "{{ tls_pem_path }}"
      register: pem_key
    - name: Combine PEM key
      shell: "cat {{ tls_cert_path }} {{ tls_intermediate_ca_path }} {{ tls_key_path }} > {{ tls_pem_path }}"
      when: not pem_key.stat.exists or intermediate_ca.changed or server_cert.changed or server_key.changed
    - name: Set PEM permissions
      file:
        path: "{{ tls_pem_path }}"
        owner: "{{ tls_key_owner }}"
        group: "{{ tls_key_group }}"
        mode: '0600'
  when: create_pem_key
