; Main entry point for Riemann rules. The code here is evaluated in
; the `riemann.config` namespace when it is loaded.
; vim: filetype=clojure :

; Log output to a file.
(logging/init {:file "/var/log/riemann/riemann.log"})
(logging/set-level "riemann.transport.tcp" org.apache.log4j.Level/INFO)
(logging/set-level "riemann.transport.udp" org.apache.log4j.Level/INFO)


; Accept metrics via UDP.
(udp-server :host "{{ riemann_metrics_bind }}"
            :port {{ riemann_udp_port }}
            :max-size 65535)

; Accept metrics via TCP.
(tcp-server :host "{{ riemann_metrics_bind }}"
            :port {{ riemann_tcp_port }})

; Set up a TLS-protected port for secure metrics. The key can be generated with
; the following command:
;     openssl pkcs8 -topk8 -nocrypt -in $tls_key -out $pkcs8_key
(tcp-server :host "{{ riemann_metrics_bind }}"
            :port {{ riemann_tls_port }}
            :tls? true
            :key  "{{ riemann_tls_key }}"
            :cert "{{ tls_chained_cert_path }}"
            :ca-cert "{{ tls_root_ca_path }}")

; Serve websockets locally so it can be proxied securely by Nginx.
(ws-server  :host "{{ riemann_ws_bind }}"
            :port {{ riemann_ws_port_internal }})


; Sweep the index for expired events every N seconds.
(periodically-expire 10)



;; ## Stream Configuration

(require
  '[clojure.string :as str]
  :reload-all)


(def env
  (->> (System/getenv)
       (map (fn [[k v]] [(keyword (str/lower-case (str/replace k "_" "-"))) v]))
       (into {})))


(def influxdb-writer
  (batch 100 1
    (async-queue! :influxdb
      {:queue-size     1000  ; 10k events max
       :core-pool-size 2
       :max-pools-size 8}
      (influxdb {:scheme   "https"
                 :host     (env :influxdb-host     "influxdb")
                 :db       (env :influxdb-database "riemann")
                 :user     (env :influxdb-user     "riemann")
                 :password (env :influxdb-pass)
                 :version :0.9}))))


(let [index (default {:ttl 300} (index))]
  (streams
    ; For now, just record things to the index.
    index
    influxdb-writer))
