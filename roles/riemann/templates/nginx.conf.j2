# Riemann NGINX configuration

#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       mime.types;
  default_type  application/octet-stream;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;

  server_tokens off;
  sendfile off;
  #tcp_nopush on;
  keepalive_timeout 65;
  gzip off;

  # Websocket server
  upstream riemann-ws {
    server {{ riemann_ws_bind }}:{{ riemann_ws_port_internal }};
    keepalive 16;
  }

  # Riemann dashboard server
  upstream riemann-dash {
    server {{ riemann_dash_bind_address }}:{{ riemann_dash_port }};
    keepalive 16;
  }

  # Redirect plain HTTP requests to HTTPS.
  server {
    listen 80;
    server_name {{ ansible_fqdn }};
    return 301 https://{{ ansible_fqdn }}$request_uri;
  }

  # Serve dashboard on HTTPS port.
  server {
    listen 443 ssl;
    server_name {{ ansible_fqdn }};

    # Logs
    access_log /var/log/nginx/riemann_dash_access.log combined;
    error_log  /var/log/nginx/riemann_dash_error.log;

    # TLS settings.
    ssl_prefer_server_ciphers on;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK;
    ssl_certificate     /etc/ssl/certs/chained_{{ ansible_fqdn }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ ansible_fqdn }}.key;
    ssl_session_cache   shared:SSL:50m;
    ssl_session_timeout 5m;

    location / {
      proxy_pass http://riemann-dash;
    }
  }

  # Proxy encrypted WSS to Riemann.
  server {
    listen {{ riemann_ws_port }} ssl;
    server_name {{ ansible_fqdn }};

    # Logs
    access_log /var/log/nginx/riemann_ws_access.log combined;
    error_log  /var/log/nginx/riemann_ws_error.log;

    # TLS settings.
    ssl_prefer_server_ciphers on;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK;
    ssl_certificate     /etc/ssl/certs/chained_{{ ansible_fqdn }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ ansible_fqdn }}.key;
    ssl_session_cache   shared:SSL:50m;
    ssl_session_timeout 5m;

    location / {
      proxy_pass http://riemann-ws;

      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      #proxy_read_timeout 86400;
      #proxy_ssl_session_reuse off;
    }
  }
}
